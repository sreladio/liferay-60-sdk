/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.z.registration.model;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.lang.reflect.Proxy;

/**
 * @author Sr. Eladio
 */
public class PohoneNumberClp extends BaseModelImpl<PohoneNumber>
	implements PohoneNumber {
	public PohoneNumberClp() {
	}

	public long getPrimaryKey() {
		return _foreingMemberId;
	}

	public void setPrimaryKey(long pk) {
		setForeingMemberId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_foreingMemberId);
	}

	public long getForeingMemberId() {
		return _foreingMemberId;
	}

	public void setForeingMemberId(long foreingMemberId) {
		_foreingMemberId = foreingMemberId;
	}

	public String getNumber() {
		return _number;
	}

	public void setNumber(String number) {
		_number = number;
	}

	public PohoneNumber toEscapedModel() {
		if (isEscapedModel()) {
			return this;
		}
		else {
			return (PohoneNumber)Proxy.newProxyInstance(PohoneNumber.class.getClassLoader(),
				new Class[] { PohoneNumber.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		PohoneNumberClp clone = new PohoneNumberClp();

		clone.setForeingMemberId(getForeingMemberId());
		clone.setNumber((Member)getNumber().clone());

		return clone;
	}

	public int compareTo(PohoneNumber pohoneNumber) {
		int value = 0;

		value = getNumber().compareTo(pohoneNumber.getNumber());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PohoneNumberClp pohoneNumber = null;

		try {
			pohoneNumber = (PohoneNumberClp)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = pohoneNumber.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{foreingMemberId=");
		sb.append(getForeingMemberId());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.z.registration.model.PohoneNumber");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>foreingMemberId</column-name><column-value><![CDATA[");
		sb.append(getForeingMemberId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _foreingMemberId;
	private String _number;
}