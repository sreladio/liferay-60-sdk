package com.oldschool.user.registration.portlet;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.util.Validator;
import com.oldschool.user.registration.model.USMember;

/**
 * 
 * Liferay incluye una utilidad para la validaci�n de formularios
 * 
 * Est� implementada en la clase com.liferay.kernel.util.Validator
 * 
 * Para cada portlet se crea una clase a parte que contendr� toda la 
 * l�gica de la validaci�n, para todos los objetos que vallan a
 * persistir en la base de datos 
 *
 * Este es un ejemplo sencillo que s�lo comprueba que los campos
 * del formulario no est�n vac�os, pero el Validator() incluye
 * funciones como: isPhoneNumber() o isEmailAddress() 
 */
public class registerFormValidator {

	/**
	 * 
	 * @param errors Es el objeto SessionErrors, a el cual accederemos 
	 * 			 	 desde el formulario a trav�s de tags liferay-ui
	 */
	public static boolean validateRegister(USMember member, List errors) {
		boolean valid = true;
		
		// Todos lo campos requeridos excepto el tel�fono
/*		if (Validator.isNull(member.getMemberFirstName())) {
			errors.add("first-name-required");
			valid = false;
		}
		if (Validator.isNull(member.getMemberLastName())) {
			errors.add("last-name-required");
			valid = false;
		}
		if (Validator.isNull(member.getMemberEmail())) {
			errors.add("eMail-required");
			valid = false;
		}
		
		// El tel�fono debe de contener nueve d�gitos
		if ( Validator.isNotNull(member.getMemberPhoneNumber()) ) {
			if ( !checkForValidPhoneNumber(member.getMemberPhoneNumber()) ) {
				errors.add("phone-number-must-contain-nine-digits");
				valid = false;
			}
		} else {
		}
		
		// El correo electr�nico debe de contener @
		if(!Validator.isEmailAddress(member.getMemberEmail())) {
			errors.add("eMail-must-be-valid");
			valid = false;
		}*/
		return valid;
	}
	
	private static boolean checkForValidPhoneNumber(String input) {
		Pattern p = Pattern.compile("\\d{9}");
	    Matcher m = p.matcher(input);
	    if (m.find() && input.length() < 10) {
	    	return true;
	    }
	    return false;
	}
}
