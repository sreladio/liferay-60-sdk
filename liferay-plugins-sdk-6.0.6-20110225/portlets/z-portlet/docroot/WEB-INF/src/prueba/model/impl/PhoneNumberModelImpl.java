/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package prueba.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;

import prueba.model.PhoneNumber;
import prueba.model.PhoneNumberModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the PhoneNumber service. Represents a row in the &quot;Z_PhoneNumber&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link prueba.model.PhoneNumberModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhoneNumberImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a phone number model instance should use the {@link prueba.model.PhoneNumber} interface instead.
 * </p>
 *
 * @author Sr. Eladio
 * @see PhoneNumberImpl
 * @see prueba.model.PhoneNumber
 * @see prueba.model.PhoneNumberModel
 * @generated
 */
public class PhoneNumberModelImpl extends BaseModelImpl<PhoneNumber>
	implements PhoneNumberModel {
	public static final String TABLE_NAME = "Z_PhoneNumber";
	public static final Object[][] TABLE_COLUMNS = {
			{ "numberId", new Integer(Types.VARCHAR) }
		};
	public static final String TABLE_SQL_CREATE = "create table Z_PhoneNumber (numberId VARCHAR(75) not null primary key)";
	public static final String TABLE_SQL_DROP = "drop table Z_PhoneNumber";
	public static final String ORDER_BY_JPQL = " ORDER BY phoneNumber.numberId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Z_PhoneNumber.numberId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.prueba.model.PhoneNumber"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.prueba.model.PhoneNumber"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.prueba.model.PhoneNumber"));

	public PhoneNumberModelImpl() {
	}

	public String getPrimaryKey() {
		return _numberId;
	}

	public void setPrimaryKey(String pk) {
		setNumberId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return _numberId;
	}

	public String getNumberId() {
		if (_numberId == null) {
			return StringPool.BLANK;
		}
		else {
			return _numberId;
		}
	}

	public void setNumberId(String numberId) {
		_numberId = numberId;
	}

	public PhoneNumber toEscapedModel() {
		if (isEscapedModel()) {
			return (PhoneNumber)this;
		}
		else {
			return (PhoneNumber)Proxy.newProxyInstance(PhoneNumber.class.getClassLoader(),
				new Class[] { PhoneNumber.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		PhoneNumberImpl phoneNumberImpl = new PhoneNumberImpl();

		phoneNumberImpl.setNumberId(getNumberId());

		return phoneNumberImpl;
	}

	public int compareTo(PhoneNumber phoneNumber) {
		int value = 0;

		value = getNumberId().compareTo(phoneNumber.getNumberId());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PhoneNumber phoneNumber = null;

		try {
			phoneNumber = (PhoneNumber)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String pk = phoneNumber.getPrimaryKey();

		if (getPrimaryKey().equals(pk)) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	public String toString() {
		StringBundler sb = new StringBundler(3);

		sb.append("{numberId=");
		sb.append(getNumberId());

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(7);

		sb.append("<model><model-name>");
		sb.append("prueba.model.PhoneNumber");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>numberId</column-name><column-value><![CDATA[");
		sb.append(getNumberId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _numberId;
}