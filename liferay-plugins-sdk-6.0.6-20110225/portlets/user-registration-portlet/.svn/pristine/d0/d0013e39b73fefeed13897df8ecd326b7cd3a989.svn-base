/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.oldschool.user.registration.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.oldschool.user.registration.model.USPhoneNumber;
import com.oldschool.user.registration.model.USPhoneNumberModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the USPhoneNumber service. Represents a row in the &quot;US_USPhoneNumber&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.oldschool.user.registration.model.USPhoneNumberModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link USPhoneNumberImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a u s phone number model instance should use the {@link com.oldschool.user.registration.model.USPhoneNumber} interface instead.
 * </p>
 *
 * @author Sr. Eladio
 * @see USPhoneNumberImpl
 * @see com.oldschool.user.registration.model.USPhoneNumber
 * @see com.oldschool.user.registration.model.USPhoneNumberModel
 * @generated
 */
public class USPhoneNumberModelImpl extends BaseModelImpl<USPhoneNumber>
	implements USPhoneNumberModel {
	public static final String TABLE_NAME = "US_USPhoneNumber";
	public static final Object[][] TABLE_COLUMNS = {
			{ "numberId", new Integer(Types.VARCHAR) },
			{ "memberId", new Integer(Types.BIGINT) }
		};
	public static final String TABLE_SQL_CREATE = "create table US_USPhoneNumber (numberId VARCHAR(75) not null primary key,memberId LONG)";
	public static final String TABLE_SQL_DROP = "drop table US_USPhoneNumber";
	public static final String ORDER_BY_JPQL = " ORDER BY usPhoneNumber.numberId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY US_USPhoneNumber.numberId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.oldschool.user.registration.model.USPhoneNumber"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.oldschool.user.registration.model.USPhoneNumber"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.oldschool.user.registration.model.USPhoneNumber"));

	public USPhoneNumberModelImpl() {
	}

	public String getPrimaryKey() {
		return _numberId;
	}

	public void setPrimaryKey(String pk) {
		setNumberId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return _numberId;
	}

	public String getNumberId() {
		if (_numberId == null) {
			return StringPool.BLANK;
		}
		else {
			return _numberId;
		}
	}

	public void setNumberId(String numberId) {
		_numberId = numberId;
	}

	public long getMemberId() {
		return _memberId;
	}

	public void setMemberId(long memberId) {
		_memberId = memberId;
	}

	public USPhoneNumber toEscapedModel() {
		if (isEscapedModel()) {
			return (USPhoneNumber)this;
		}
		else {
			return (USPhoneNumber)Proxy.newProxyInstance(USPhoneNumber.class.getClassLoader(),
				new Class[] { USPhoneNumber.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public Object clone() {
		USPhoneNumberImpl usPhoneNumberImpl = new USPhoneNumberImpl();

		usPhoneNumberImpl.setNumberId(getNumberId());

		usPhoneNumberImpl.setMemberId(getMemberId());

		return usPhoneNumberImpl;
	}

	public int compareTo(USPhoneNumber usPhoneNumber) {
		int value = 0;

		value = getNumberId().compareTo(usPhoneNumber.getNumberId());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		USPhoneNumber usPhoneNumber = null;

		try {
			usPhoneNumber = (USPhoneNumber)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String pk = usPhoneNumber.getPrimaryKey();

		if (getPrimaryKey().equals(pk)) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{numberId=");
		sb.append(getNumberId());
		sb.append(", memberId=");
		sb.append(getMemberId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.oldschool.user.registration.model.USPhoneNumber");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>numberId</column-name><column-value><![CDATA[");
		sb.append(getNumberId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>memberId</column-name><column-value><![CDATA[");
		sb.append(getMemberId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private String _numberId;
	private long _memberId;
}